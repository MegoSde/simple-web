-- 05_identity.sql
-- Opretter ASP.NET Identity tabeller for PostgreSQL

BEGIN;

-- ========== AspNetRoles ==========
CREATE TABLE IF NOT EXISTS public."AspNetRoles" (
                                                    "Id"               text PRIMARY KEY,
                                                    "Name"             character varying(256),
    "NormalizedName"   character varying(256),
    "ConcurrencyStamp" text
    );

-- ========== AspNetUsers ==========
CREATE TABLE IF NOT EXISTS public."AspNetUsers" (
                                                    "Id"                   text PRIMARY KEY,
                                                    "UserName"             character varying(256),
    "NormalizedUserName"   character varying(256),
    "Email"                character varying(256),
    "NormalizedEmail"      character varying(256),
    "EmailConfirmed"       boolean NOT NULL DEFAULT FALSE,
    "PasswordHash"         text,
    "SecurityStamp"        text,
    "ConcurrencyStamp"     text,
    "PhoneNumber"          text,
    "PhoneNumberConfirmed" boolean NOT NULL DEFAULT FALSE,
    "TwoFactorEnabled"     boolean NOT NULL DEFAULT FALSE,
    "LockoutEnd"           timestamp with time zone,
                                         "LockoutEnabled"       boolean NOT NULL DEFAULT FALSE,
                                         "AccessFailedCount"    integer NOT NULL DEFAULT 0
                                         );

-- ========== AspNetRoleClaims ==========
CREATE TABLE IF NOT EXISTS public."AspNetRoleClaims" (
                                                         "Id"      integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                         "RoleId"  text NOT NULL,
                                                         "ClaimType"  text,
                                                         "ClaimValue" text,
                                                         CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId"
                                                         FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE
    );

-- ========== AspNetUserClaims ==========
CREATE TABLE IF NOT EXISTS public."AspNetUserClaims" (
                                                         "Id"       integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                         "UserId"   text NOT NULL,
                                                         "ClaimType"  text,
                                                         "ClaimValue" text,
                                                         CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId"
                                                         FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE
    );

-- ========== AspNetUserLogins ==========
CREATE TABLE IF NOT EXISTS public."AspNetUserLogins" (
                                                         "LoginProvider"      text NOT NULL,
                                                         "ProviderKey"        text NOT NULL,
                                                         "ProviderDisplayName" text,
                                                         "UserId"             text NOT NULL,
                                                         CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId"
    FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE
    );

-- ========== AspNetUserRoles ==========
CREATE TABLE IF NOT EXISTS public."AspNetUserRoles" (
                                                        "UserId" text NOT NULL,
                                                        "RoleId" text NOT NULL,
                                                        CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId"
    FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId"
    FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE
    );

-- ========== AspNetUserTokens ==========
CREATE TABLE IF NOT EXISTS public."AspNetUserTokens" (
                                                         "UserId"        text NOT NULL,
                                                         "LoginProvider" text NOT NULL,
                                                         "Name"          text NOT NULL,
                                                         "Value"         text,
                                                         CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId"
    FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE
    );

-- ========== Indekser ==========
-- Migrations definerer disse (RoleNameIndex, UserNameIndex, EmailIndex, diverse FK-indekser)
-- EF/Npgsql laver normalt partial unique for NormalizedName/UserName (IS NOT NULL).

-- RoleNameIndex (unique på NormalizedName når ikke NULL)
CREATE UNIQUE INDEX IF NOT EXISTS "RoleNameIndex"
    ON public."AspNetRoles" ("NormalizedName")
    WHERE "NormalizedName" IS NOT NULL;

-- UserNameIndex (unique på NormalizedUserName når ikke NULL)
CREATE UNIQUE INDEX IF NOT EXISTS "UserNameIndex"
    ON public."AspNetUsers" ("NormalizedUserName")
    WHERE "NormalizedUserName" IS NOT NULL;

-- EmailIndex
CREATE INDEX IF NOT EXISTS "EmailIndex"
    ON public."AspNetUsers" ("NormalizedEmail");

-- Øvrige FK-hjælpeindekser
CREATE INDEX IF NOT EXISTS "IX_AspNetRoleClaims_RoleId"
    ON public."AspNetRoleClaims" ("RoleId");

CREATE INDEX IF NOT EXISTS "IX_AspNetUserClaims_UserId"
    ON public."AspNetUserClaims" ("UserId");

CREATE INDEX IF NOT EXISTS "IX_AspNetUserLogins_UserId"
    ON public."AspNetUserLogins" ("UserId");

CREATE INDEX IF NOT EXISTS "IX_AspNetUserRoles_RoleId"
    ON public."AspNetUserRoles" ("RoleId");

COMMIT;